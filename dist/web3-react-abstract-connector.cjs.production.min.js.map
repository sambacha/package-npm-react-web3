{"version":3,"file":"web3-react-abstract-connector.cjs.production.min.js","sources":["../src/types.ts","../src/index.ts"],"sourcesContent":["export interface AbstractConnectorArguments {\n  supportedChainIds?: number[]\n}\n\nexport interface ConnectorUpdate<T = number | string> {\n  provider?: any\n  chainId?: T\n  account?: null | string\n}\n\nexport enum ConnectorEvent {\n  Update = 'Web3ReactUpdate',\n  Error = 'Web3ReactError',\n  Deactivate = 'Web3ReactDeactivate'\n}","/** \n * @package abstract-connector\n */\nimport { EventEmitter } from 'node:events'\nimport { AbstractConnectorArguments, ConnectorUpdate, ConnectorEvent } from './types'\nimport __DEV__ from './declarations'\n\nexport abstract class AbstractConnector extends EventEmitter {\n  public readonly supportedChainIds?: number[]\n\n  constructor({ supportedChainIds }: AbstractConnectorArguments = {}) {\n    super()\n    this.supportedChainIds = supportedChainIds\n  }\n\n  public abstract activate(): Promise<ConnectorUpdate>\n  public abstract getProvider(): Promise<any>\n  public abstract getChainId(): Promise<number | string>\n  public abstract getAccount(): Promise<null | string>\n  public abstract deactivate(): void\n\n  protected emitUpdate(update: ConnectorUpdate): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Update}' with payload`, update)\n    }\n    this.emit(ConnectorEvent.Update, update)\n  }\n\n  protected emitError(error: Error): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Error}' with payload`, error)\n    }\n    this.emit(ConnectorEvent.Error, error)\n  }\n\n  protected emitDeactivate(): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Deactivate}'`)\n    }\n    this.emit(ConnectorEvent.Deactivate)\n  }\n}\n"],"names":["ConnectorEvent","supportedChainIds","_this","_proto","emitUpdate","update","this","emit","Update","emitError","error","Error","emitDeactivate","Deactivate","EventEmitter"],"mappings":"iBAUYA,oJAAZ,SAAYA,GACVA,2BACAA,yBACAA,mCAHF,CAAYA,IAAAA,qDCAV,oBAAcC,cAAkD,MAAlDA,yBACZC,sBACKD,kBAAoBA,oFAL7B,kBAAA,OAAAE,EAcYC,WAAA,SAAWC,GAInBC,KAAKC,KAAKP,EAAeQ,OAAQH,IAlBrCF,EAqBYM,UAAA,SAAUC,GAIlBJ,KAAKC,KAAKP,EAAeW,MAAOD,IAzBpCP,EA4BYS,eAAA,WAIRN,KAAKC,KAAKP,EAAea,gBAhCmBC"}